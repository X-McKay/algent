version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: algent-redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redispass}
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispass}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redispass}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - algent_redis_data:/data
    networks:
      - algent-network

  postgres:
    image: postgres:15-alpine
    container_name: algent-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-algent}
      - POSTGRES_USER=${POSTGRES_USER:-algent}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgrespass}
    ports:
      - "5432:5432"
    volumes:
      - algent_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-algent} -d ${POSTGRES_DB:-algent}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - algent-network

  api-server:
    image: algent-api:earthly
    container_name: algent-api-server
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - POSTGRES_DB=${POSTGRES_DB:-algent}
      - POSTGRES_USER=${POSTGRES_USER:-algent}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgrespass}
      - API_HOST=${API_HOST:-localhost}
      - API_PORT=${API_PORT:-8000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - START_API_SERVER=true
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - algent-network

  file-processor:
    image: algent-file-processor:earthly
    container_name: algent-file-processor
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - POSTGRES_DB=${POSTGRES_DB:-algent}
      - POSTGRES_USER=${POSTGRES_USER:-algent}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgrespass}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - AGENT_TYPE=file_processor
      - AGENT_ID=file-processor-1
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      api-server:
        condition: service_started
    restart: unless-stopped
    networks:
      - algent-network

  agent-runner:
    image: algent:earthly
    container_name: algent-agent-runner
    environment:
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - POSTGRES_DB=${POSTGRES_DB:-algent}
      - POSTGRES_USER=${POSTGRES_USER:-algent}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgrespass}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - RUN_DEMO_AGENTS=${RUN_DEMO_AGENTS:-false}
      - AGENT_HEARTBEAT_INTERVAL=${AGENT_HEARTBEAT_INTERVAL:-30}
      - AGENT_TASK_TIMEOUT=${AGENT_TASK_TIMEOUT:-300}
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      api-server:
        condition: service_started
    restart: unless-stopped
    networks:
      - algent-network

volumes:
  algent_redis_data:
  algent_postgres_data:

networks:
  algent-network:
    driver: bridge